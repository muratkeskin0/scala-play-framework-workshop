# Database configuration is loaded from database.conf
include "database.conf"
# Database configuration is loaded from database.conf example
# include "database.conf.example"

# Email configuration is loaded from email.conf
include "email.conf"
# Email configuration example
# include "email.conf.example"

# Pac4j security configuration
pac4j {
  # Security configuration
  security {
    # Default security filter
    defaultSecurityClients = "FormClient"
    
    # Session timeout (in seconds)
    sessionTimeout = 3600
    
    # Cookie settings
    cookie {
      name = "PLAY_SESSION"
      maxAge = 3600
      httpOnly = true // Cookie'ye sadece HTTP üzerinden erişilir, JavaScript erişemez (XSS koruması).
      secure = false
    }
  }
  
  # HTTP client configuration
  http {
    # Form client configuration
    formClient {
      loginUrl = "/login"
      usernameParameter = "email"
      passwordParameter = "password"
    }
  }
}

# Cache module configuration
play.modules.enabled += "play.api.cache.caffeine.CaffeineCacheModule"

# Security Filter Configuration
play.filters.enabled += "filters.Pac4jSecurityFilter"

# CSRF Filter Configuration - Keep enabled for security
play.filters.csrf {
  # Allow AJAX requests with proper headers
  bypassCorsTrustedOrigins = false
  
  # Token name
  token.name = "csrfToken"
  
  # Header names for AJAX
  header.name = "X-CSRF-Token"
  
  # Cookie settings
  cookie {
    name = "PLAY_CSRF_TOKEN"
    secure = false
    httpOnly = false  # Allow JavaScript access
    sameSite = "lax"
  }
  
  # Paths to bypass CSRF check (public endpoints)
  bypass.paths = [
    "/login",
    "/logout", 
    "/callback",
    "/signUp",
    "/signUpValidate",
    "/loginValidate",
    "/assets/*",
    "/",
    "/todo"
  ]
  
  # Methods to bypass CSRF check
  bypass.methods = ["GET", "HEAD", "OPTIONS"]
  
  # Content types that bypass CSRF check
  bypass.contentTypes = ["text/plain", "multipart/form-data"]
}

# Security settings
security {
  # Enable security filter
  filter.enabled = true
  
  # Log security events
  logging.enabled = true
  
  # Session security
  session {
    # Secure session cookies
    secure = false
    httpOnly = true
    sameSite = "lax"
  }
}